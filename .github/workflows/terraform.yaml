name: Terraform CI/CD

on:
  pull_request:
    branches:
      - main
  push:
    branches:
      - main

jobs:
  terraform:
    name: Terraform Plan or Apply
    runs-on: ubuntu-latest

    defaults:
      run:
        shell: bash

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'

      - name: Install Octokit packages
        run: npm install @octokit/rest @octokit/auth-app

      - name: Setup Terraform
        uses: hashicorp/setup-terraform@v3
        with:
          terraform_version: 1.7.5

      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: us-east-1

      - name: Terraform Init
        run: terraform init

      - name: Terraform Format Check
        run: terraform fmt -check

      - name: Terraform Validate
        run: terraform validate

      - name: Terraform Plan
        if: github.event_name == 'pull_request'
        id: plan
        run: |
          terraform plan -no-color -out=tfplan.binary > plan.txt
          cat plan.txt

      - name: Comment PR using GitHub App
        if: github.event_name == 'pull_request'
        run: node .github/scripts/comment-pr.mjs
        env:
          APP_ID: ${{ secrets.GH_APP_ID }}
          INSTALLATION_ID: ${{ secrets.GH_APP_INSTALLATION_ID }}
          PRIVATE_KEY: ${{ secrets.GH_APP_PRIVATE_KEY }}
          PR_NUMBER: ${{ github.event.pull_request.number }}
          REPO: ${{ github.repository }}


      - name: Comment PR with Terraform Plan
        if: github.event_name == 'pull_request'
        uses: actions/github-script@v7
        with:
          github-token: ${{ secrets.PR_TOKEN }}
          script: |
            const fs = require('fs');
            const body = fs.readFileSync('plan.txt', 'utf8');
            await github.rest.issues.createComment({
              issue_number: context.payload.pull_request.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `### ðŸ“¦ Terraform Plan Result\n\`\`\`\n${body}\n\`\`\``
            });

      - name: Terraform Apply
        if: github.event_name == 'push'
        run: terraform apply -auto-approve tfplan.binary
